openapi: 3.0.3
info:
  title: Future Frame API
  description: The Futre Frame REST API documentation.
  version: 0.1.1
  contact:
    name: Future Frame Support
    email: support@futureframe.ai
  license:
    name: MIT
    url: https://github.com/futureframeai/ff-openapi/blob/master/LICENSE
servers:
  - url: https://futureframe.ai/api
security:
  - ApiKeyAuth: []
tags:
  - name: API Keys
    description: Details
  - name: Pre-trained Models
    description: Details
  - name: Fine-tuning
    description: Fine-tuning description
  - name: Evaluation
    description: Details
  - name: Inference
    description: Details
  - name: Fine-tuned Models
    description: Details
  - name: Usage
    description: Details
  - name: Health
    description: Details
paths:
  /api-keys:
    post:
      tags:
        - API Keys
      summary: Create a new API key
      operationId: create_api_key
      security:
        - BearerAuth: []
      requestBody:
        description: Details for the new API key
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Production API Key
      responses:
        '201':
          description: API key created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_key:
                    type: string
                    example: ff-c0b5011f-2d84-4002-b153-2287b7ca1e94
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /api-keys/{id}:
    delete:
      tags:
        - API Keys
      summary: Delete an API key by value
      operationId: delete_api_key
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: ff-c0b5011f-2d84-4002-b153-2287b7ca1e94
      responses:
        '204':
          description: API key deleted successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    example: 204
                    description: HTTP status code
                  message:
                    type: string
                    example: API key deleted successfully
                    description: Success message
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /pretrained-models:
    get:
      tags:
        - Pre-trained Models
      summary: Get a list of pre-trained models
      operationId: pretrained_models
      security: []
      parameters:
        - name: limit
          in: query
          description: Maximum number of models to return
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of models to skip before starting to collect the result set
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: List of models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1
                  models:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: ff_zero
                        name:
                          type: string
                          example: Future Frame model Zero
                        createdAt:
                          type: string
                          format: date-time
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /finetuning:
    post:
      operationId: createFineTuningJob
      tags:
        - Fine-tuning
      description: Upload a CSV file along with a model name to fine-tune the specified model
      summary: Fine-tune a model with your training data
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - model_name
              properties:
                file:
                  type: string
                  format: binary
                  description: The CSV file containing the training data.
                model_name:
                  type: string
                  description: The name of the model to be available for inference.
      responses:
        '201':
          description: Fine-tuning job started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: ID of the created job
                    example: ff-finetuning-job-1
                  message:
                    type: string
                    example: Model fine-tuning started successfully.
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /finetuning/{id}:
    get:
      tags:
        - Fine-tuning
      summary: Check fine-tuning job status
      description: Retrieve the status of a specific fine-tuning job
      operationId: finetuning_results
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the job to check
          schema:
            type: string
            example: ff-job-789
      responses:
        '200':
          description: fine-tuning results retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: eval_123456789abcdef
                  status:
                    type: string
                    example: completed
                  result:
                    type: object
                    properties:
                      accuracy:
                        type: number
                        format: float
                        example: 0.95
                      precision:
                        type: number
                        format: float
                        example: 0.92
                      recall:
                        type: number
                        format: float
                        example: 0.9
                      f1_score:
                        type: number
                        format: float
                        example: 0.91
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /evaluation:
    post:
      tags:
        - Evaluation
      operationId: evaluate
      summary: Evaluate a fine-tuned model
      description: Start a new evaluation
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - model_id
              properties:
                file:
                  type: string
                  format: binary
                  description: The CSV file containing the evaluation data
                model_id:
                  type: string
                  description: ID of the model to fine-tune
                  example: model_123
      responses:
        '200':
          description: Evaluation running
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: ID of the created job
                    example: ff-job_789
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /evaluation/{id}:
    get:
      tags:
        - Evaluation
      summary: Get evaluation results by ID
      operationId: evaluarion_results
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the evaluation
          required: true
          schema:
            type: string
            example: eval_123456789abcdef
      responses:
        '200':
          description: Evaluation results retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: ff-eval-123456789abcdef
                  status:
                    type: string
                    example: completed
                  result:
                    type: object
                    properties:
                      accuracy:
                        type: number
                        format: float
                        example: 0.95
                      precision:
                        type: number
                        format: float
                        example: 0.92
                      recall:
                        type: number
                        format: float
                        example: 0.9
                      f1_score:
                        type: number
                        format: float
                        example: 0.91
                      additional_metrics:
                        type: object
                        additionalProperties:
                          type: number
                          format: float
                          example: 0.85
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /inference/{model_name}:
    post:
      tags:
        - Inference
      description: Make predictions with fine-tuned model
      summary: Predictions
      operationId: predictions
      parameters:
        - in: path
          name: model_name
          description: Name of model
          required: true
          schema:
            type: string
      requestBody:
        description: Input data format is defined by each model
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Output data format is defined by each model
          content:
            application/json:
              schema:
                type: object
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /models:
    get:
      tags:
        - Fine-tuned Models
      summary: Get a list of fine-tuned models
      operationId: list_models
      parameters:
        - name: limit
          in: query
          description: Maximum number of models to return
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of models to skip before starting to collect the result set
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: List of models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 100
                  models:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: model_123456789abcdef
                        name:
                          type: string
                          example: My Fine-tuned Model
                        status:
                          type: string
                          example: completed
                        created_at:
                          type: string
                          format: date-time
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /models/{id}:
    get:
      tags:
        - Fine-tuned Models
      summary: Get a fine-tuned model by ID
      operationId: model_details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: model_123456789abcdef
      responses:
        '200':
          description: Model retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Fine-tuned Models
      summary: Delete a fine-tuned model by ID
      operationId: delete_model
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: model_123456789abcdef
      responses:
        '204':
          description: Model deleted successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    example: 204
                    description: HTTP status code
                  message:
                    type: string
                    example: Model deleted successfully
                    description: Success message
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /usage:
    get:
      tags:
        - Usage
      summary: Get usage information
      operationId: usage
      responses:
        '200':
          description: Usage information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_credits:
                    type: integer
                    example: 1000
                  used_credits:
                    type: integer
                    example: 150
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /health:
    get:
      summary: Check API Health
      description: Returns the health status of the API
      operationId: health
      security: []
      tags:
        - Health
      responses:
        '200':
          description: Successful response indicating the API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                    description: HTTP status code
                  message:
                    type: string
                    example: API is healthy
                    description: A message indicating the health status
                required:
                  - code
                  - message
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    '400':
      description: Invalid input parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
                description: HTTP status code
              message:
                type: string
                example: Bad request
                description: A message indicating the error
            required:
              - code
              - message
    '403':
      description: Access forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 403
                description: HTTP status code
              message:
                type: string
                example: Unauthorized
                description: A message indicating the error
            required:
              - code
              - message
    '404':
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 404
                description: HTTP status code
              message:
                type: string
                example: Resource not found
                description: A message indicating the error
            required:
              - code
              - message
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 500
                description: HTTP status code
              message:
                type: string
                example: Internal server error
                description: A message indicating the error
            required:
              - code
              - message
    BadRequest:
      $ref: '#/components/responses/400'
    ForbiddenError:
      $ref: '#/components/responses/403'
    NotFoundError:
      $ref: '#/components/responses/404'
    UnexpectedError:
      $ref: '#/components/responses/500'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: api_key
      in: query
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
